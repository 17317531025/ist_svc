<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ist.svc.dao.ProdOtherInfoMapper">
  <resultMap id="BaseResultMap" type="com.ist.svc.domain.ProdOtherInfo">
    <id column="prodinfoid" jdbcType="INTEGER" property="prodinfoid" />
    <result column="minprice" jdbcType="REAL" property="minprice" />
    <result column="maxprice" jdbcType="REAL" property="maxprice" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="grade" jdbcType="REAL" property="grade" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prodinfoid, minprice, maxprice, sales, grade, updatetime
  </sql>
  <sql id="Base_Column_List_Prod">
    A.prodinfoid, A.minprice, A.maxprice, A.sales, A.grade, B.name as prodInfoName,B.descr, B.HeadImg headimg, B.Topimgs as topimgs
  </sql>
  <select id="selectByExample" parameterType="com.ist.svc.domain.ProdOtherInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prod_other_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prod_other_info
    where prodinfoid = #{prodinfoid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prod_other_info
    where prodinfoid = #{prodinfoid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ist.svc.domain.ProdOtherInfoExample">
    delete from prod_other_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ist.svc.domain.ProdOtherInfo">
    <selectKey keyProperty="prodinfoid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into prod_other_info (minprice, maxprice, sales, 
      grade, updatetime)
    values (#{minprice,jdbcType=REAL}, #{maxprice,jdbcType=REAL}, #{sales,jdbcType=INTEGER}, 
      #{grade,jdbcType=REAL}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ist.svc.domain.ProdOtherInfo">
    <selectKey keyProperty="prodinfoid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into prod_other_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="minprice != null">
        minprice,
      </if>
      <if test="maxprice != null">
        maxprice,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="minprice != null">
        #{minprice,jdbcType=REAL},
      </if>
      <if test="maxprice != null">
        #{maxprice,jdbcType=REAL},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=REAL},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ist.svc.domain.ProdOtherInfoExample" resultType="java.lang.Long">
    select count(*) from prod_other_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prod_other_info
    <set>
      <if test="record.prodinfoid != null">
        prodinfoid = #{record.prodinfoid,jdbcType=INTEGER},
      </if>
      <if test="record.minprice != null">
        minprice = #{record.minprice,jdbcType=REAL},
      </if>
      <if test="record.maxprice != null">
        maxprice = #{record.maxprice,jdbcType=REAL},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=REAL},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prod_other_info
    set prodinfoid = #{record.prodinfoid,jdbcType=INTEGER},
      minprice = #{record.minprice,jdbcType=REAL},
      maxprice = #{record.maxprice,jdbcType=REAL},
      sales = #{record.sales,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=REAL},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ist.svc.domain.ProdOtherInfo">
    update prod_other_info
    <set>
      <if test="minprice != null">
        minprice = #{minprice,jdbcType=REAL},
      </if>
      <if test="maxprice != null">
        maxprice = #{maxprice,jdbcType=REAL},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=REAL},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where prodinfoid = #{prodinfoid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ist.svc.domain.ProdOtherInfo">
    update prod_other_info
    set minprice = #{minprice,jdbcType=REAL},
      maxprice = #{maxprice,jdbcType=REAL},
      sales = #{sales,jdbcType=INTEGER},
      grade = #{grade,jdbcType=REAL},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where prodinfoid = #{prodinfoid,jdbcType=INTEGER}
  </update>
  <select id="selectByParams" resultMap="BaseResultMap" parameterType="map">
    select <include refid="Base_Column_List_Prod"></include>
    from prod_other_info A left join prod_info B on A.prodinfoid = B.prodinfoid
    <include refid="Example_Where_Clause_Prod"></include>
  </select>
  <sql id="Example_Where_Clause_Prod">
    <where>
      <if test="key != null and key != ''">
        and B.name like concat('%',#{key},'%')
      </if>
      <if test="status != null and status!=''">
        and B.status = #{status,jdbcType=SMALLINT}
      </if>
    </where>
  </sql>
</mapper>