<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ist.svc.dao.InfoVillageMapper">
  <resultMap id="BaseResultMap" type="com.ist.svc.domain.InfoVillage">
    <id column="villageid" jdbcType="BIGINT" property="villageid" />
    <result column="provinceid" jdbcType="INTEGER" property="provinceid" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="cityid" jdbcType="INTEGER" property="cityid" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="areaid" jdbcType="INTEGER" property="areaid" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="townid" jdbcType="BIGINT" property="townid" />
    <result column="town" jdbcType="VARCHAR" property="town" />
    <result column="village" jdbcType="VARCHAR" property="village" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    villageid, provinceid, province, cityid, city, areaid, area, townid, town, village
  </sql>
  <select id="selectByExample" parameterType="com.ist.svc.domain.InfoVillageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from info_village
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from info_village
    where villageid = #{villageid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from info_village
    where villageid = #{villageid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ist.svc.domain.InfoVillageExample">
    delete from info_village
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ist.svc.domain.InfoVillage">
    insert into info_village (villageid, provinceid, province, 
      cityid, city, areaid, 
      area, townid, town, 
      village)
    values (#{villageid,jdbcType=BIGINT}, #{provinceid,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR}, 
      #{cityid,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR}, #{areaid,jdbcType=INTEGER}, 
      #{area,jdbcType=VARCHAR}, #{townid,jdbcType=BIGINT}, #{town,jdbcType=VARCHAR}, 
      #{village,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ist.svc.domain.InfoVillage">
    insert into info_village
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="villageid != null">
        villageid,
      </if>
      <if test="provinceid != null">
        provinceid,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="cityid != null">
        cityid,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="areaid != null">
        areaid,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="townid != null">
        townid,
      </if>
      <if test="town != null">
        town,
      </if>
      <if test="village != null">
        village,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="villageid != null">
        #{villageid,jdbcType=BIGINT},
      </if>
      <if test="provinceid != null">
        #{provinceid,jdbcType=INTEGER},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="cityid != null">
        #{cityid,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="areaid != null">
        #{areaid,jdbcType=INTEGER},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="townid != null">
        #{townid,jdbcType=BIGINT},
      </if>
      <if test="town != null">
        #{town,jdbcType=VARCHAR},
      </if>
      <if test="village != null">
        #{village,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ist.svc.domain.InfoVillageExample" resultType="java.lang.Long">
    select count(*) from info_village
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update info_village
    <set>
      <if test="record.villageid != null">
        villageid = #{record.villageid,jdbcType=BIGINT},
      </if>
      <if test="record.provinceid != null">
        provinceid = #{record.provinceid,jdbcType=INTEGER},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.cityid != null">
        cityid = #{record.cityid,jdbcType=INTEGER},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.areaid != null">
        areaid = #{record.areaid,jdbcType=INTEGER},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.townid != null">
        townid = #{record.townid,jdbcType=BIGINT},
      </if>
      <if test="record.town != null">
        town = #{record.town,jdbcType=VARCHAR},
      </if>
      <if test="record.village != null">
        village = #{record.village,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update info_village
    set villageid = #{record.villageid,jdbcType=BIGINT},
      provinceid = #{record.provinceid,jdbcType=INTEGER},
      province = #{record.province,jdbcType=VARCHAR},
      cityid = #{record.cityid,jdbcType=INTEGER},
      city = #{record.city,jdbcType=VARCHAR},
      areaid = #{record.areaid,jdbcType=INTEGER},
      area = #{record.area,jdbcType=VARCHAR},
      townid = #{record.townid,jdbcType=BIGINT},
      town = #{record.town,jdbcType=VARCHAR},
      village = #{record.village,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ist.svc.domain.InfoVillage">
    update info_village
    <set>
      <if test="provinceid != null">
        provinceid = #{provinceid,jdbcType=INTEGER},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="cityid != null">
        cityid = #{cityid,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="areaid != null">
        areaid = #{areaid,jdbcType=INTEGER},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="townid != null">
        townid = #{townid,jdbcType=BIGINT},
      </if>
      <if test="town != null">
        town = #{town,jdbcType=VARCHAR},
      </if>
      <if test="village != null">
        village = #{village,jdbcType=VARCHAR},
      </if>
    </set>
    where villageid = #{villageid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ist.svc.domain.InfoVillage">
    update info_village
    set provinceid = #{provinceid,jdbcType=INTEGER},
      province = #{province,jdbcType=VARCHAR},
      cityid = #{cityid,jdbcType=INTEGER},
      city = #{city,jdbcType=VARCHAR},
      areaid = #{areaid,jdbcType=INTEGER},
      area = #{area,jdbcType=VARCHAR},
      townid = #{townid,jdbcType=BIGINT},
      town = #{town,jdbcType=VARCHAR},
      village = #{village,jdbcType=VARCHAR}
    where villageid = #{villageid,jdbcType=BIGINT}
  </update>
</mapper>