<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ist.svc.dao.UserCouponMapper">
  <resultMap id="BaseResultMap" type="com.ist.svc.domain.UserCoupon">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="userId" jdbcType="BIGINT" property="userid" />
    <result column="shopId" jdbcType="INTEGER" property="shopid" />
<!--    <result column="prodid" jdbcType="INTEGER" property="prodid" />-->
    <result column="couponId" jdbcType="INTEGER" property="couponid" />
    <result column="no" jdbcType="INTEGER" property="no" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="endtime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="usertime" jdbcType="TIMESTAMP" property="usertime" />
    <result column="orderId" jdbcType="BIGINT" property="orderid" />
  </resultMap>
  <resultMap id="BaseResultMapCoupon" type="com.ist.svc.domain.UserCoupon">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="userId" jdbcType="BIGINT" property="userid" />
    <result column="shopId" jdbcType="INTEGER" property="shopid" />
    <result column="prodid" jdbcType="INTEGER" property="prodid" />
    <result column="couponId" jdbcType="INTEGER" property="couponid" />
    <result column="no" jdbcType="INTEGER" property="no" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="usertime" jdbcType="TIMESTAMP" property="usertime" />
    <result column="endtime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="orderId" jdbcType="BIGINT" property="orderid" />
    <result column="type" jdbcType="SMALLINT" property="type" />
    <result column="conditionmoney" jdbcType="REAL" property="conditionMoney" />
    <result column="money" jdbcType="REAL" property="money" />
    <result column="shopname" jdbcType="VARCHAR" property="shopname" />
    <result column="couponname" jdbcType="VARCHAR" property="couponname" />
    <result column="descr" jdbcType="VARCHAR" property="descr" />
    <collection property="shopCouponProds" ofType="com.ist.svc.domain.ShopCouponProd" javaType="java.util.List">
      <id column="id" jdbcType="BIGINT" property="id" />
      <result column="prodinfoId" jdbcType="INTEGER" property="prodinfoid" />
      <result column="prodid" jdbcType="INTEGER" property="prodid" />
      <result column="headimg" jdbcType="VARCHAR" property="headimg" />
      <result column="prodname" jdbcType="VARCHAR" property="prodname" />
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, shopId, couponId, `no`, `status`, createtime, endtime, usertime,
    orderId
  </sql>
  <sql id="Base_Column_List_Coupon">
    A.id, A.userId, A.shopId, B.couponid, A.`no`, A.`status`, A.createtime, A.endtime,A.usertime,
    A.orderId,B.type,B.conditionmoney,B.money,B.shopname,B.couponname,B.descr
  </sql>
  <select id="selectByExample" parameterType="com.ist.svc.domain.UserCouponExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ist.svc.domain.UserCouponExample">
    delete from user_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ist.svc.domain.UserCoupon">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_coupon (userId, shopId, prodid, 
      couponId, `no`, `status`, 
      createtime, endtime, usertime, 
      orderId)
    values (#{userid,jdbcType=BIGINT}, #{shopid,jdbcType=INTEGER}, #{prodid,jdbcType=INTEGER}, 
      #{couponid,jdbcType=INTEGER}, #{no,jdbcType=INTEGER}, #{status,jdbcType=SMALLINT}, 
      #{createtime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, #{usertime,jdbcType=TIMESTAMP}, 
      #{orderid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ist.svc.domain.UserCoupon">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_coupon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userId,
      </if>
      <if test="shopid != null">
        shopId,
      </if>
      <if test="couponid != null">
        couponId,
      </if>
      <if test="no != null">
        `no`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="endtime != null">
        endtime,
      </if>
      <if test="usertime != null">
        usertime,
      </if>
      <if test="orderid != null">
        orderId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=INTEGER},
      </if>
      <if test="couponid != null">
        #{couponid,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        #{no,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="usertime != null">
        #{usertime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ist.svc.domain.UserCouponExample" resultType="java.lang.Long">
    select count(*) from user_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_coupon
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.shopid != null">
        shopId = #{record.shopid,jdbcType=INTEGER},
      </if>
      <if test="record.prodid != null">
        prodid = #{record.prodid,jdbcType=INTEGER},
      </if>
      <if test="record.couponid != null">
        couponId = #{record.couponid,jdbcType=INTEGER},
      </if>
      <if test="record.no != null">
        `no` = #{record.no,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        endtime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.usertime != null">
        usertime = #{record.usertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderid != null">
        orderId = #{record.orderid,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_coupon
    set id = #{record.id,jdbcType=BIGINT},
      userId = #{record.userid,jdbcType=BIGINT},
      shopId = #{record.shopid,jdbcType=INTEGER},
      prodid = #{record.prodid,jdbcType=INTEGER},
      couponId = #{record.couponid,jdbcType=INTEGER},
      `no` = #{record.no,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=SMALLINT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      endtime = #{record.endtime,jdbcType=TIMESTAMP},
      usertime = #{record.usertime,jdbcType=TIMESTAMP},
      orderId = #{record.orderid,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByParams" parameterType="map" resultMap="BaseResultMapCoupon">
    select * from (select <include refid="Base_Column_List_Coupon"></include>
    from user_coupon A left join shop_coupon B on A.couponId = B.couponid
    <include refid="Example_Where_Clause_Coupon"></include>
    ) D left join shop_coupon_prod C on D.couponId=C.couponid
  </select>
  <sql id="Example_Where_Clause_Coupon">
    <where>
      <if test="userId != null and userId != ''">
        and A.userId = #{userId,jdbcType=BIGINT}
      </if>
      <if test="shopIds != null and shopIds!=''">
        and B.shopid in
        <foreach collection="shopIds" item="shopId"  open="(" separator="," close=")">
          #{shopId}
        </foreach>
      </if>
      <if test="endTime != null">
        <![CDATA[ and A.endtime >= #{endTime,jdbcType=TIMESTAMP}  ]]>
      </if>
      <if test="status != null and status!=''">
        and A.status = #{status,jdbcType=SMALLINT}
      </if>
    </where>
    order by A.id desc
  </sql>
</mapper>