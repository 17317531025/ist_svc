<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ist.svc.dao.UserAccountBookMapper">
  <resultMap id="BaseResultMap" type="com.ist.svc.domain.UserAccountBook">
    <id column="transid" jdbcType="BIGINT" property="transid" />
    <result column="subaccountid" jdbcType="BIGINT" property="subaccountid" />
    <result column="accountid" jdbcType="BIGINT" property="accountid" />
    <result column="accttype" jdbcType="SMALLINT" property="accttype" />
    <result column="direct" jdbcType="SMALLINT" property="direct" />
    <result column="paytype" jdbcType="SMALLINT" property="paytype" />
    <result column="biztype" jdbcType="SMALLINT" property="biztype" />
    <result column="orderid" jdbcType="VARCHAR" property="orderid" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="otherorder" jdbcType="VARCHAR" property="otherorder" />
    <result column="otheracct" jdbcType="VARCHAR" property="otheracct" />
    <result column="money" jdbcType="REAL" property="money" />
    <result column="balance" jdbcType="REAL" property="balance" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="optuserid" jdbcType="BIGINT" property="optuserid" />
    <result column="descr" jdbcType="VARCHAR" property="descr" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    transid, subaccountid, accountid, accttype, direct, paytype,biztype, orderid, `status`, otherorder,
    otheracct, money, balance, createtime, optuserid, descr
  </sql>
  <select id="selectByExample" parameterType="com.ist.svc.domain.UserAccountBookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_account_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_account_book
    where transid = #{transid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_account_book
    where transid = #{transid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ist.svc.domain.UserAccountBookExample">
    delete from user_account_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ist.svc.domain.UserAccountBook">
    insert into user_account_book (transid,subaccountid, accountid, accttype,
      direct, paytype, biztype, orderid,
      `status`, otherorder, otheracct, 
      money, balance, createtime, 
      optuserid, descr)
    values (#{transid,jdbcType=BIGINT},#{subaccountid,jdbcType=BIGINT}, #{accountid,jdbcType=BIGINT}, #{accttype,jdbcType=SMALLINT},
      #{direct,jdbcType=SMALLINT}, #{paytype,jdbcType=SMALLINT}, #{biztype,jdbcType=SMALLINT}, #{orderid,jdbcType=VARCHAR},
      #{status,jdbcType=SMALLINT}, #{otherorder,jdbcType=VARCHAR}, #{otheracct,jdbcType=VARCHAR}, 
      #{money,jdbcType=REAL}, #{balance,jdbcType=REAL}, #{createtime,jdbcType=TIMESTAMP}, 
      #{optuserid,jdbcType=BIGINT}, #{descr,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ist.svc.domain.UserAccountBook">
    <selectKey keyProperty="transid" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_account_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="subaccountid != null">
        subaccountid,
      </if>
      <if test="accountid != null">
        accountid,
      </if>
      <if test="accttype != null">
        accttype,
      </if>
      <if test="direct != null">
        direct,
      </if>
      <if test="paytype != null">
        paytype,
      </if>
      <if test="orderid != null">
        orderid,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="otherorder != null">
        otherorder,
      </if>
      <if test="otheracct != null">
        otheracct,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="optuserid != null">
        optuserid,
      </if>
      <if test="descr != null">
        descr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="subaccountid != null">
        #{subaccountid,jdbcType=BIGINT},
      </if>
      <if test="accountid != null">
        #{accountid,jdbcType=BIGINT},
      </if>
      <if test="accttype != null">
        #{accttype,jdbcType=SMALLINT},
      </if>
      <if test="direct != null">
        #{direct,jdbcType=SMALLINT},
      </if>
      <if test="paytype != null">
        #{paytype,jdbcType=SMALLINT},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="otherorder != null">
        #{otherorder,jdbcType=VARCHAR},
      </if>
      <if test="otheracct != null">
        #{otheracct,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=REAL},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=REAL},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="optuserid != null">
        #{optuserid,jdbcType=BIGINT},
      </if>
      <if test="descr != null">
        #{descr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ist.svc.domain.UserAccountBookExample" resultType="java.lang.Long">
    select count(*) from user_account_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_account_book
    <set>
      <if test="record.transid != null">
        transid = #{record.transid,jdbcType=BIGINT},
      </if>
      <if test="record.subaccountid != null">
        subaccountid = #{record.subaccountid,jdbcType=BIGINT},
      </if>
      <if test="record.accountid != null">
        accountid = #{record.accountid,jdbcType=BIGINT},
      </if>
      <if test="record.accttype != null">
        accttype = #{record.accttype,jdbcType=SMALLINT},
      </if>
      <if test="record.direct != null">
        direct = #{record.direct,jdbcType=SMALLINT},
      </if>
      <if test="record.paytype != null">
        paytype = #{record.paytype,jdbcType=SMALLINT},
      </if>
      <if test="record.orderid != null">
        orderid = #{record.orderid,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.otherorder != null">
        otherorder = #{record.otherorder,jdbcType=VARCHAR},
      </if>
      <if test="record.otheracct != null">
        otheracct = #{record.otheracct,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=REAL},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=REAL},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.optuserid != null">
        optuserid = #{record.optuserid,jdbcType=BIGINT},
      </if>
      <if test="record.descr != null">
        descr = #{record.descr,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_account_book
    set transid = #{record.transid,jdbcType=BIGINT},
      subaccountid = #{record.subaccountid,jdbcType=BIGINT},
      accountid = #{record.accountid,jdbcType=BIGINT},
      accttype = #{record.accttype,jdbcType=SMALLINT},
      direct = #{record.direct,jdbcType=SMALLINT},
      paytype = #{record.paytype,jdbcType=SMALLINT},
      orderid = #{record.orderid,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=SMALLINT},
      otherorder = #{record.otherorder,jdbcType=VARCHAR},
      otheracct = #{record.otheracct,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=REAL},
      balance = #{record.balance,jdbcType=REAL},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      optuserid = #{record.optuserid,jdbcType=BIGINT},
      descr = #{record.descr,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ist.svc.domain.UserAccountBook">
    update user_account_book
    <set>
      <if test="subaccountid != null">
        subaccountid = #{subaccountid,jdbcType=BIGINT},
      </if>
      <if test="accountid != null">
        accountid = #{accountid,jdbcType=BIGINT},
      </if>
      <if test="accttype != null">
        accttype = #{accttype,jdbcType=SMALLINT},
      </if>
      <if test="direct != null">
        direct = #{direct,jdbcType=SMALLINT},
      </if>
      <if test="paytype != null">
        paytype = #{paytype,jdbcType=SMALLINT},
      </if>
      <if test="orderid != null">
        orderid = #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=SMALLINT},
      </if>
      <if test="otherorder != null">
        otherorder = #{otherorder,jdbcType=VARCHAR},
      </if>
      <if test="otheracct != null">
        otheracct = #{otheracct,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=REAL},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=REAL},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="optuserid != null">
        optuserid = #{optuserid,jdbcType=BIGINT},
      </if>
      <if test="descr != null">
        descr = #{descr,jdbcType=VARCHAR},
      </if>
    </set>
    where transid = #{transid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ist.svc.domain.UserAccountBook">
    update user_account_book
    set subaccountid = #{subaccountid,jdbcType=BIGINT},
      accountid = #{accountid,jdbcType=BIGINT},
      accttype = #{accttype,jdbcType=SMALLINT},
      direct = #{direct,jdbcType=SMALLINT},
      paytype = #{paytype,jdbcType=SMALLINT},
      orderid = #{orderid,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=SMALLINT},
      otherorder = #{otherorder,jdbcType=VARCHAR},
      otheracct = #{otheracct,jdbcType=VARCHAR},
      money = #{money,jdbcType=REAL},
      balance = #{balance,jdbcType=REAL},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      optuserid = #{optuserid,jdbcType=BIGINT},
      descr = #{descr,jdbcType=VARCHAR}
    where transid = #{transid,jdbcType=BIGINT}
  </update>
</mapper>