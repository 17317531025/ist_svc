<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ist.svc.dao.OrderCardMapper">
  <resultMap id="BaseResultMap" type="com.ist.svc.domain.OrderCard">
    <id column="orderid" jdbcType="BIGINT" property="orderid" />
    <result column="userid" jdbcType="BIGINT" property="userid" />
    <result column="shopid" jdbcType="INTEGER" property="shopid" />
    <result column="prodid" jdbcType="INTEGER" property="prodid" />
    <result column="starttime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="endtime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="total" jdbcType="REAL" property="total" />
    <result column="once" jdbcType="REAL" property="once" />
    <result column="usenum" jdbcType="REAL" property="usenum" />
    <result column="leavenum" jdbcType="REAL" property="leavenum" />
    <result column="canceltype" jdbcType="SMALLINT" property="canceltype" />
    <result column="endcanceltype" jdbcType="SMALLINT" property="endcanceltype" />
    <result column="channel" jdbcType="SMALLINT" property="channel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orderid, userid, shopid, prodid, starttime, endtime, total, once, usenum, leavenum, 
    canceltype, endcanceltype, channel
  </sql>
  <select id="selectByExample" parameterType="com.ist.svc.domain.OrderCardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_card
    where orderid = #{orderid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_card
    where orderid = #{orderid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ist.svc.domain.OrderCardExample">
    delete from order_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ist.svc.domain.OrderCard">
    <selectKey keyProperty="orderid" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_card (userid, shopid, prodid, 
      starttime, endtime, total, 
      once, usenum, leavenum, canceltype, 
      endcanceltype, channel)
    values (#{userid,jdbcType=BIGINT}, #{shopid,jdbcType=INTEGER}, #{prodid,jdbcType=INTEGER}, 
      #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, #{total,jdbcType=REAL}, 
      #{once,jdbcType=REAL}, #{usenum,jdbcType=REAL}, #{leavenum,jdbcType=REAL}, #{canceltype,jdbcType=SMALLINT}, 
      #{endcanceltype,jdbcType=SMALLINT}, #{channel,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ist.svc.domain.OrderCard">
    <selectKey keyProperty="orderid" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_card
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="shopid != null">
        shopid,
      </if>
      <if test="prodid != null">
        prodid,
      </if>
      <if test="starttime != null">
        starttime,
      </if>
      <if test="endtime != null">
        endtime,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="once != null">
        once,
      </if>
      <if test="usenum != null">
        usenum,
      </if>
      <if test="leavenum != null">
        leavenum,
      </if>
      <if test="canceltype != null">
        canceltype,
      </if>
      <if test="endcanceltype != null">
        endcanceltype,
      </if>
      <if test="channel != null">
        channel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=INTEGER},
      </if>
      <if test="prodid != null">
        #{prodid,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="total != null">
        #{total,jdbcType=REAL},
      </if>
      <if test="once != null">
        #{once,jdbcType=REAL},
      </if>
      <if test="usenum != null">
        #{usenum,jdbcType=REAL},
      </if>
      <if test="leavenum != null">
        #{leavenum,jdbcType=REAL},
      </if>
      <if test="canceltype != null">
        #{canceltype,jdbcType=SMALLINT},
      </if>
      <if test="endcanceltype != null">
        #{endcanceltype,jdbcType=SMALLINT},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ist.svc.domain.OrderCardExample" resultType="java.lang.Long">
    select count(*) from order_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_card
    <set>
      <if test="record.orderid != null">
        orderid = #{record.orderid,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.shopid != null">
        shopid = #{record.shopid,jdbcType=INTEGER},
      </if>
      <if test="record.prodid != null">
        prodid = #{record.prodid,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null">
        starttime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        endtime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=REAL},
      </if>
      <if test="record.once != null">
        once = #{record.once,jdbcType=REAL},
      </if>
      <if test="record.usenum != null">
        usenum = #{record.usenum,jdbcType=REAL},
      </if>
      <if test="record.leavenum != null">
        leavenum = #{record.leavenum,jdbcType=REAL},
      </if>
      <if test="record.canceltype != null">
        canceltype = #{record.canceltype,jdbcType=SMALLINT},
      </if>
      <if test="record.endcanceltype != null">
        endcanceltype = #{record.endcanceltype,jdbcType=SMALLINT},
      </if>
      <if test="record.channel != null">
        channel = #{record.channel,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_card
    set orderid = #{record.orderid,jdbcType=BIGINT},
      userid = #{record.userid,jdbcType=BIGINT},
      shopid = #{record.shopid,jdbcType=INTEGER},
      prodid = #{record.prodid,jdbcType=INTEGER},
      starttime = #{record.starttime,jdbcType=TIMESTAMP},
      endtime = #{record.endtime,jdbcType=TIMESTAMP},
      total = #{record.total,jdbcType=REAL},
      once = #{record.once,jdbcType=REAL},
      usenum = #{record.usenum,jdbcType=REAL},
      leavenum = #{record.leavenum,jdbcType=REAL},
      canceltype = #{record.canceltype,jdbcType=SMALLINT},
      endcanceltype = #{record.endcanceltype,jdbcType=SMALLINT},
      channel = #{record.channel,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ist.svc.domain.OrderCard">
    update order_card
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="shopid != null">
        shopid = #{shopid,jdbcType=INTEGER},
      </if>
      <if test="prodid != null">
        prodid = #{prodid,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=REAL},
      </if>
      <if test="once != null">
        once = #{once,jdbcType=REAL},
      </if>
      <if test="usenum != null">
        usenum = #{usenum,jdbcType=REAL},
      </if>
      <if test="leavenum != null">
        leavenum = #{leavenum,jdbcType=REAL},
      </if>
      <if test="canceltype != null">
        canceltype = #{canceltype,jdbcType=SMALLINT},
      </if>
      <if test="endcanceltype != null">
        endcanceltype = #{endcanceltype,jdbcType=SMALLINT},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=SMALLINT},
      </if>
    </set>
    where orderid = #{orderid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ist.svc.domain.OrderCard">
    update order_card
    set userid = #{userid,jdbcType=BIGINT},
      shopid = #{shopid,jdbcType=INTEGER},
      prodid = #{prodid,jdbcType=INTEGER},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      total = #{total,jdbcType=REAL},
      once = #{once,jdbcType=REAL},
      usenum = #{usenum,jdbcType=REAL},
      leavenum = #{leavenum,jdbcType=REAL},
      canceltype = #{canceltype,jdbcType=SMALLINT},
      endcanceltype = #{endcanceltype,jdbcType=SMALLINT},
      channel = #{channel,jdbcType=SMALLINT}
    where orderid = #{orderid,jdbcType=BIGINT}
  </update>
</mapper>