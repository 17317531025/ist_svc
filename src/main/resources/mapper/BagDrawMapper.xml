<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ist.svc.dao.BagDrawMapper">
  <resultMap id="BaseResultMap" type="com.ist.svc.domain.BagDraw">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="bag_no" jdbcType="DECIMAL" property="bagNo" />
    <result column="draw_user" jdbcType="BIGINT" property="drawUser" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="blance_amount" jdbcType="SMALLINT" property="blanceAmount" />
    <result column="blance_money" jdbcType="REAL" property="blanceMoney" />
    <result column="draw_money" jdbcType="REAL" property="drawMoney" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bag_no, draw_user, `status`, blance_amount, blance_money, draw_money, answer, 
    createtime, updatetime
  </sql>
  <select id="selectByExample" parameterType="com.ist.svc.domain.BagDrawExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bag_draw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bag_draw
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bag_draw
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ist.svc.domain.BagDrawExample">
    delete from bag_draw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ist.svc.domain.BagDraw">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bag_draw (bag_no, draw_user, `status`, 
      blance_amount, blance_money, draw_money, 
      answer, createtime, updatetime
      )
    values (#{bagNo,jdbcType=DECIMAL}, #{drawUser,jdbcType=BIGINT}, #{status,jdbcType=SMALLINT}, 
      #{blanceAmount,jdbcType=SMALLINT}, #{blanceMoney,jdbcType=REAL}, #{drawMoney,jdbcType=REAL}, 
      #{answer,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ist.svc.domain.BagDraw">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bag_draw
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bagNo != null">
        bag_no,
      </if>
      <if test="drawUser != null">
        draw_user,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="blanceAmount != null">
        blance_amount,
      </if>
      <if test="blanceMoney != null">
        blance_money,
      </if>
      <if test="drawMoney != null">
        draw_money,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bagNo != null">
        #{bagNo,jdbcType=DECIMAL},
      </if>
      <if test="drawUser != null">
        #{drawUser,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="blanceAmount != null">
        #{blanceAmount,jdbcType=SMALLINT},
      </if>
      <if test="blanceMoney != null">
        #{blanceMoney,jdbcType=REAL},
      </if>
      <if test="drawMoney != null">
        #{drawMoney,jdbcType=REAL},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ist.svc.domain.BagDrawExample" resultType="java.lang.Long">
    select count(*) from bag_draw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bag_draw
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bagNo != null">
        bag_no = #{record.bagNo,jdbcType=DECIMAL},
      </if>
      <if test="record.drawUser != null">
        draw_user = #{record.drawUser,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.blanceAmount != null">
        blance_amount = #{record.blanceAmount,jdbcType=SMALLINT},
      </if>
      <if test="record.blanceMoney != null">
        blance_money = #{record.blanceMoney,jdbcType=REAL},
      </if>
      <if test="record.drawMoney != null">
        draw_money = #{record.drawMoney,jdbcType=REAL},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bag_draw
    set id = #{record.id,jdbcType=BIGINT},
      bag_no = #{record.bagNo,jdbcType=DECIMAL},
      draw_user = #{record.drawUser,jdbcType=BIGINT},
      `status` = #{record.status,jdbcType=SMALLINT},
      blance_amount = #{record.blanceAmount,jdbcType=SMALLINT},
      blance_money = #{record.blanceMoney,jdbcType=REAL},
      draw_money = #{record.drawMoney,jdbcType=REAL},
      answer = #{record.answer,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ist.svc.domain.BagDraw">
    update bag_draw
    <set>
      <if test="bagNo != null">
        bag_no = #{bagNo,jdbcType=DECIMAL},
      </if>
      <if test="drawUser != null">
        draw_user = #{drawUser,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=SMALLINT},
      </if>
      <if test="blanceAmount != null">
        blance_amount = #{blanceAmount,jdbcType=SMALLINT},
      </if>
      <if test="blanceMoney != null">
        blance_money = #{blanceMoney,jdbcType=REAL},
      </if>
      <if test="drawMoney != null">
        draw_money = #{drawMoney,jdbcType=REAL},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ist.svc.domain.BagDraw">
    update bag_draw
    set bag_no = #{bagNo,jdbcType=DECIMAL},
      draw_user = #{drawUser,jdbcType=BIGINT},
      `status` = #{status,jdbcType=SMALLINT},
      blance_amount = #{blanceAmount,jdbcType=SMALLINT},
      blance_money = #{blanceMoney,jdbcType=REAL},
      draw_money = #{drawMoney,jdbcType=REAL},
      answer = #{answer,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectSumDrawMoney" resultType="Float" parameterType="BigDecimal">
    select sum(draw_money) from bag_draw where bag_no=#{bagNo,jdbcType=DECIMAL}
  </select>
  <insert id="batchInsert" parameterType="List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bag_draw (bag_no, draw_user, `status`,blance_amount, blance_money, draw_money,
    answer, createtime, updatetime)
    values
    <foreach collection="list" item="bagDraw" index="index" separator=",">
      (#{bagDraw.bagNo,jdbcType=DECIMAL},#{bagDraw.drawUser,jdbcType=BIGINT},#{bagDraw.status,jdbcType=SMALLINT},#{bagDraw.blanceAmount,jdbcType=SMALLINT},
      #{bagDraw.blanceMoney,jdbcType=REAL},#{bagDraw.drawMoney,jdbcType=REAL},
      #{bagDraw.answer,jdbcType=VARCHAR},now(), now())
    </foreach>
  </insert>
</mapper>