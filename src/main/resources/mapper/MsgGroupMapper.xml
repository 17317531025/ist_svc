<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ist.svc.dao.MsgGroupMapper">
  <resultMap id="BaseResultMap" type="com.ist.svc.domain.MsgGroup">
    <id column="groupid" jdbcType="BIGINT" property="groupid" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="optuserid" jdbcType="BIGINT" property="optuserid" />
    <result column="joingroup" jdbcType="SMALLINT" property="joingroup" />
    <result column="groupname" jdbcType="VARCHAR" property="groupName" />
    <result column="avatarurl" jdbcType="VARCHAR" property="avatarurl" />
  </resultMap>
  <resultMap id="BaseResultMapMember" type="com.ist.svc.domain.MsgGroup">
    <id column="groupid" jdbcType="BIGINT" property="groupid" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="optuserid" jdbcType="BIGINT" property="optuserid" />
    <result column="joingroup" jdbcType="SMALLINT" property="joingroup" />
    <result column="groupname" jdbcType="VARCHAR" property="groupName" />
    <result column="avatarurl" jdbcType="VARCHAR" property="avatarurl" />
    <collection property="msgMembers" ofType="com.ist.svc.domain.MsgMember" javaType="java.util.List">
      <id column="memberid" jdbcType="BIGINT" property="memberid" />
      <result column="groupid" jdbcType="BIGINT" property="groupid" />
      <result column="seq" jdbcType="SMALLINT" property="seq" />
      <result column="status" jdbcType="SMALLINT" property="status" />
      <result column="talker" jdbcType="BIGINT" property="talker" />
      <result column="groupnickname" jdbcType="VARCHAR" property="groupnickname" />
      <result column="groupavatarurl" jdbcType="VARCHAR" property="groupavatarurl" />
      <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
      <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
      <result column="optuserid" jdbcType="BIGINT" property="optuserid" />
      <result column="inviteuserId" jdbcType="BIGINT" property="inviteuserid" />
      <result column="Locktime" jdbcType="TIMESTAMP" property="locktime" />
      <result column="role" jdbcType="SMALLINT" property="role" />
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    groupid, `status`, createtime, updatetime, optuserid, joingroup, groupname, avatarurl
  </sql>
  <select id="selectByExample" parameterType="com.ist.svc.domain.MsgGroupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from msg_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from msg_group
    where groupid = #{groupid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from msg_group
    where groupid = #{groupid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ist.svc.domain.MsgGroupExample">
    delete from msg_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ist.svc.domain.MsgGroup">
    <selectKey keyProperty="groupid" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into msg_group (`status`, createtime, updatetime, 
      optuserid, joingroup, groupname,
      avatarurl)
    values (#{status,jdbcType=SMALLINT}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{optuserid,jdbcType=BIGINT}, #{joingroup,jdbcType=SMALLINT}, #{groupName,jdbcType=VARCHAR},
      #{avatarurl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ist.svc.domain.MsgGroup">
    <selectKey keyProperty="groupid" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into msg_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="status != null">
        `status`,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="optuserid != null">
        optuserid,
      </if>
      <if test="joingroup != null">
        joingroup,
      </if>
      <if test="groupName != null">
        groupname,
      </if>
      <if test="avatarurl != null">
        avatarurl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="optuserid != null">
        #{optuserid,jdbcType=BIGINT},
      </if>
      <if test="joingroup != null">
        #{joingroup,jdbcType=SMALLINT},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="avatarurl != null">
        #{avatarurl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ist.svc.domain.MsgGroupExample" resultType="java.lang.Long">
    select count(*) from msg_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update msg_group
    <set>
      <if test="record.groupid != null">
        groupid = #{record.groupid,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.optuserid != null">
        optuserid = #{record.optuserid,jdbcType=BIGINT},
      </if>
      <if test="record.joingroup != null">
        joingroup = #{record.joingroup,jdbcType=SMALLINT},
      </if>
      <if test="record.groupName != null">
        groupname = #{record.groupName,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarurl != null">
        avatarurl = #{record.avatarurl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update msg_group
    set groupid = #{record.groupid,jdbcType=BIGINT},
      `status` = #{record.status,jdbcType=SMALLINT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      optuserid = #{record.optuserid,jdbcType=BIGINT},
      joingroup = #{record.joingroup,jdbcType=SMALLINT},
      groupname = #{record.name,jdbcType=VARCHAR},
      avatarurl = #{record.avatarurl,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ist.svc.domain.MsgGroup">
    update msg_group
    <set>
      <if test="status != null">
        `status` = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="optuserid != null">
        optuserid = #{optuserid,jdbcType=BIGINT},
      </if>
      <if test="joingroup != null">
        joingroup = #{joingroup,jdbcType=SMALLINT},
      </if>
      <if test="groupName != null">
        groupname = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="avatarurl != null">
        avatarurl = #{avatarurl,jdbcType=VARCHAR},
      </if>
    </set>
    where groupid = #{groupid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ist.svc.domain.MsgGroup">
    update msg_group
    set `status` = #{status,jdbcType=SMALLINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      optuserid = #{optuserid,jdbcType=BIGINT},
      joingroup = #{joingroup,jdbcType=SMALLINT},
      groupname = #{groupName,jdbcType=VARCHAR},
      avatarurl = #{avatarurl,jdbcType=VARCHAR}
    where groupid = #{groupid,jdbcType=BIGINT}
  </update>
  <select id="selectMsgMemsByTakers" resultMap="BaseResultMapMember">
    SELECT * FROM
    msg_member A
    WHERE	A.status =1  and A.groupid in (
    SELECT	B.groupid	FROM msg_member B
    WHERE B.talker IN
      <foreach collection="talkers" item="talker" separator=","  open="(" close=")">
        #{talker,jdbcType=BIGINT}
      </foreach>
       AND B.status =1
    )
  </select>
</mapper>