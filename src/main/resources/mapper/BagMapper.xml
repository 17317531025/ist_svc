<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ist.svc.dao.BagMapper">
  <resultMap id="BaseResultMap" type="com.ist.svc.domain.Bag">
    <id column="bag_no" jdbcType="DECIMAL" property="bagNo" />
    <result column="type" jdbcType="SMALLINT" property="type" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="transid" jdbcType="VARCHAR" property="transid" />
    <result column="get_type" jdbcType="SMALLINT" property="getType" />
    <result column="allocate_type" jdbcType="SMALLINT" property="allocateType" />
    <result column="once_type" jdbcType="SMALLINT" property="onceType" />
    <result column="talker" jdbcType="BIGINT" property="talker" />
    <result column="userid" jdbcType="BIGINT" property="userid" />
    <result column="amount" jdbcType="SMALLINT" property="amount" />
    <result column="money" jdbcType="REAL" property="money" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="sum_money" jdbcType="REAL" property="sumMoney" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="tip" jdbcType="VARCHAR" property="tip" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bag_no, `type`, `status`, transid, get_type, allocate_type, once_type, talker, userid, 
    amount, money, createtime, updatetime, subject_id, sum_money, title, tip,answer
  </sql>
  <select id="selectByExample" parameterType="com.ist.svc.domain.BagExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bag
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bag
    where bag_no = #{bagNo,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    delete from bag
    where bag_no = #{bagNo,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.ist.svc.domain.BagExample">
    delete from bag
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ist.svc.domain.Bag">
    insert into bag (bag_no, `type`, `status`, 
      transid, get_type, allocate_type, 
      once_type, talker, userid, 
      amount, money, createtime, 
      updatetime, subject_id, sum_money, 
      title, tip)
    values (#{bagNo,jdbcType=DECIMAL}, #{type,jdbcType=SMALLINT}, #{status,jdbcType=SMALLINT}, 
      #{transid,jdbcType=VARCHAR}, #{getType,jdbcType=SMALLINT}, #{allocateType,jdbcType=SMALLINT}, 
      #{onceType,jdbcType=SMALLINT}, #{talker,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, 
      #{amount,jdbcType=SMALLINT}, #{money,jdbcType=REAL}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{subjectId,jdbcType=INTEGER}, #{sumMoney,jdbcType=REAL}, 
      #{title,jdbcType=VARCHAR}, #{tip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ist.svc.domain.Bag">
    insert into bag
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bagNo != null">
        bag_no,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="transid != null">
        transid,
      </if>
      <if test="getType != null">
        get_type,
      </if>
      <if test="allocateType != null">
        allocate_type,
      </if>
      <if test="onceType != null">
        once_type,
      </if>
      <if test="talker != null">
        talker,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="sumMoney != null">
        sum_money,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="tip != null">
        tip,
      </if>
      <if test="delayTime != null">
        delay_time,
      </if>
      <if test="answer != null">
        answer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bagNo != null">
        #{bagNo,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="transid != null">
        #{transid,jdbcType=VARCHAR},
      </if>
      <if test="getType != null">
        #{getType,jdbcType=SMALLINT},
      </if>
      <if test="allocateType != null">
        #{allocateType,jdbcType=SMALLINT},
      </if>
      <if test="onceType != null">
        #{onceType,jdbcType=SMALLINT},
      </if>
      <if test="talker != null">
        #{talker,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=SMALLINT},
      </if>
      <if test="money != null">
        #{money,jdbcType=REAL},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="sumMoney != null">
        #{sumMoney,jdbcType=REAL},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="tip != null">
        #{tip,jdbcType=VARCHAR},
      </if>
      <if test="delayTime != null">
        #{delayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ist.svc.domain.BagExample" resultType="java.lang.Long">
    select count(*) from bag
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bag
    <set>
      <if test="record.bagNo != null">
        bag_no = #{record.bagNo,jdbcType=DECIMAL},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=SMALLINT},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.transid != null">
        transid = #{record.transid,jdbcType=VARCHAR},
      </if>
      <if test="record.getType != null">
        get_type = #{record.getType,jdbcType=SMALLINT},
      </if>
      <if test="record.allocateType != null">
        allocate_type = #{record.allocateType,jdbcType=SMALLINT},
      </if>
      <if test="record.onceType != null">
        once_type = #{record.onceType,jdbcType=SMALLINT},
      </if>
      <if test="record.talker != null">
        talker = #{record.talker,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=SMALLINT},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=REAL},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.subjectId != null">
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.sumMoney != null">
        sum_money = #{record.sumMoney,jdbcType=REAL},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.tip != null">
        tip = #{record.tip,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bag
    set bag_no = #{record.bagNo,jdbcType=DECIMAL},
      `type` = #{record.type,jdbcType=SMALLINT},
      `status` = #{record.status,jdbcType=SMALLINT},
      transid = #{record.transid,jdbcType=VARCHAR},
      get_type = #{record.getType,jdbcType=SMALLINT},
      allocate_type = #{record.allocateType,jdbcType=SMALLINT},
      once_type = #{record.onceType,jdbcType=SMALLINT},
      talker = #{record.talker,jdbcType=BIGINT},
      userid = #{record.userid,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=SMALLINT},
      money = #{record.money,jdbcType=REAL},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      sum_money = #{record.sumMoney,jdbcType=REAL},
      title = #{record.title,jdbcType=VARCHAR},
      tip = #{record.tip,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ist.svc.domain.Bag">
    update bag
    <set>
      <if test="type != null">
        `type` = #{type,jdbcType=SMALLINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=SMALLINT},
      </if>
      <if test="transid != null">
        transid = #{transid,jdbcType=VARCHAR},
      </if>
      <if test="getType != null">
        get_type = #{getType,jdbcType=SMALLINT},
      </if>
      <if test="allocateType != null">
        allocate_type = #{allocateType,jdbcType=SMALLINT},
      </if>
      <if test="onceType != null">
        once_type = #{onceType,jdbcType=SMALLINT},
      </if>
      <if test="talker != null">
        talker = #{talker,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=SMALLINT},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=REAL},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="sumMoney != null">
        sum_money = #{sumMoney,jdbcType=REAL},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="tip != null">
        tip = #{tip,jdbcType=VARCHAR},
      </if>
    </set>
    where bag_no = #{bagNo,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ist.svc.domain.Bag">
    update bag
    set `type` = #{type,jdbcType=SMALLINT},
      `status` = #{status,jdbcType=SMALLINT},
      transid = #{transid,jdbcType=VARCHAR},
      get_type = #{getType,jdbcType=SMALLINT},
      allocate_type = #{allocateType,jdbcType=SMALLINT},
      once_type = #{onceType,jdbcType=SMALLINT},
      talker = #{talker,jdbcType=BIGINT},
      userid = #{userid,jdbcType=BIGINT},
      amount = #{amount,jdbcType=SMALLINT},
      money = #{money,jdbcType=REAL},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      subject_id = #{subjectId,jdbcType=INTEGER},
      sum_money = #{sumMoney,jdbcType=REAL},
      title = #{title,jdbcType=VARCHAR},
      tip = #{tip,jdbcType=VARCHAR}
    where bag_no = #{bagNo,jdbcType=DECIMAL}
  </update>
</mapper>