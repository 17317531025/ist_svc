<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ist.svc.dao.ProdLimitMapper">
  <resultMap id="BaseResultMap" type="com.ist.svc.domain.ProdLimit">
    <id column="prodlimitid" jdbcType="INTEGER" property="prodlimitid" />
    <result column="tradetypeid" jdbcType="SMALLINT" property="tradetypeid" />
    <result column="prodtypeid" jdbcType="SMALLINT" property="prodtypeid" />
    <result column="shopid" jdbcType="INTEGER" property="shopid" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="descr" jdbcType="VARCHAR" property="descr" />
    <result column="safekeepmin" jdbcType="SMALLINT" property="safekeepmin" />
    <result column="safekeepmax" jdbcType="SMALLINT" property="safekeepmax" />
    <result column="safekeep" jdbcType="SMALLINT" property="safekeep" />
    <result column="safekeeparrive" jdbcType="SMALLINT" property="safekeeparrive" />
    <result column="canceltype" jdbcType="SMALLINT" property="canceltype" />
    <result column="cancelhours" jdbcType="REAL" property="cancelhours" />
    <result column="overhourscanceltype" jdbcType="SMALLINT" property="overhourscanceltype" />
    <result column="cancelfee" jdbcType="REAL" property="cancelfee" />
    <result column="begincanceltype" jdbcType="SMALLINT" property="begincanceltype" />
    <result column="endcanceltype" jdbcType="SMALLINT" property="endcanceltype" />
    <result column="begincancelfee" jdbcType="REAL" property="begincancelfee" />
    <result column="endcancelfee" jdbcType="REAL" property="endcancelfee" />
    <result column="transfertype" jdbcType="SMALLINT" property="transfertype" />
    <result column="transferfeetype" jdbcType="SMALLINT" property="transferfeetype" />
    <result column="transferfee" jdbcType="REAL" property="transferfee" />
    <result column="transfernum" jdbcType="SMALLINT" property="transfernum" />
    <result column="transferprice" jdbcType="REAL" property="transferprice" />
    <result column="sharetype" jdbcType="SMALLINT" property="sharetype" />
    <result column="sharenum" jdbcType="SMALLINT" property="sharenum" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="optuserid" jdbcType="BIGINT" property="optuserid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prodlimitid, tradetypeid, prodtypeid, shopid, `status`, `name`, descr, safekeepmin, 
    safekeepmax, safekeep, safekeeparrive, canceltype, cancelhours, overhourscanceltype, 
    cancelfee, begincanceltype, endcanceltype, begincancelfee, endcancelfee, transfertype, 
    transferfeetype, transferfee, transfernum, transferprice, sharetype, sharenum, createtime, 
    updatetime, optuserid
  </sql>
  <select id="selectByExample" parameterType="com.ist.svc.domain.ProdLimitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prod_limit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prod_limit
    where prodlimitid = #{prodlimitid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prod_limit
    where prodlimitid = #{prodlimitid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ist.svc.domain.ProdLimitExample">
    delete from prod_limit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ist.svc.domain.ProdLimit">
    <selectKey keyProperty="prodlimitid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into prod_limit (tradetypeid, prodtypeid, shopid, 
      `status`, `name`, descr, 
      safekeepmin, safekeepmax, safekeep, 
      safekeeparrive, canceltype, cancelhours, 
      overhourscanceltype, cancelfee, begincanceltype, 
      endcanceltype, begincancelfee, endcancelfee, 
      transfertype, transferfeetype, transferfee, 
      transfernum, transferprice, sharetype, 
      sharenum, createtime, updatetime, 
      optuserid)
    values (#{tradetypeid,jdbcType=SMALLINT}, #{prodtypeid,jdbcType=SMALLINT}, #{shopid,jdbcType=INTEGER}, 
      #{status,jdbcType=SMALLINT}, #{name,jdbcType=VARCHAR}, #{descr,jdbcType=VARCHAR}, 
      #{safekeepmin,jdbcType=SMALLINT}, #{safekeepmax,jdbcType=SMALLINT}, #{safekeep,jdbcType=SMALLINT}, 
      #{safekeeparrive,jdbcType=SMALLINT}, #{canceltype,jdbcType=SMALLINT}, #{cancelhours,jdbcType=REAL}, 
      #{overhourscanceltype,jdbcType=SMALLINT}, #{cancelfee,jdbcType=REAL}, #{begincanceltype,jdbcType=SMALLINT}, 
      #{endcanceltype,jdbcType=SMALLINT}, #{begincancelfee,jdbcType=REAL}, #{endcancelfee,jdbcType=REAL}, 
      #{transfertype,jdbcType=SMALLINT}, #{transferfeetype,jdbcType=SMALLINT}, #{transferfee,jdbcType=REAL}, 
      #{transfernum,jdbcType=SMALLINT}, #{transferprice,jdbcType=REAL}, #{sharetype,jdbcType=SMALLINT}, 
      #{sharenum,jdbcType=SMALLINT}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{optuserid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ist.svc.domain.ProdLimit">
    <selectKey keyProperty="prodlimitid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into prod_limit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tradetypeid != null">
        tradetypeid,
      </if>
      <if test="prodtypeid != null">
        prodtypeid,
      </if>
      <if test="shopid != null">
        shopid,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="descr != null">
        descr,
      </if>
      <if test="safekeepmin != null">
        safekeepmin,
      </if>
      <if test="safekeepmax != null">
        safekeepmax,
      </if>
      <if test="safekeep != null">
        safekeep,
      </if>
      <if test="safekeeparrive != null">
        safekeeparrive,
      </if>
      <if test="canceltype != null">
        canceltype,
      </if>
      <if test="cancelhours != null">
        cancelhours,
      </if>
      <if test="overhourscanceltype != null">
        overhourscanceltype,
      </if>
      <if test="cancelfee != null">
        cancelfee,
      </if>
      <if test="begincanceltype != null">
        begincanceltype,
      </if>
      <if test="endcanceltype != null">
        endcanceltype,
      </if>
      <if test="begincancelfee != null">
        begincancelfee,
      </if>
      <if test="endcancelfee != null">
        endcancelfee,
      </if>
      <if test="transfertype != null">
        transfertype,
      </if>
      <if test="transferfeetype != null">
        transferfeetype,
      </if>
      <if test="transferfee != null">
        transferfee,
      </if>
      <if test="transfernum != null">
        transfernum,
      </if>
      <if test="transferprice != null">
        transferprice,
      </if>
      <if test="sharetype != null">
        sharetype,
      </if>
      <if test="sharenum != null">
        sharenum,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="optuserid != null">
        optuserid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tradetypeid != null">
        #{tradetypeid,jdbcType=SMALLINT},
      </if>
      <if test="prodtypeid != null">
        #{prodtypeid,jdbcType=SMALLINT},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        #{descr,jdbcType=VARCHAR},
      </if>
      <if test="safekeepmin != null">
        #{safekeepmin,jdbcType=SMALLINT},
      </if>
      <if test="safekeepmax != null">
        #{safekeepmax,jdbcType=SMALLINT},
      </if>
      <if test="safekeep != null">
        #{safekeep,jdbcType=SMALLINT},
      </if>
      <if test="safekeeparrive != null">
        #{safekeeparrive,jdbcType=SMALLINT},
      </if>
      <if test="canceltype != null">
        #{canceltype,jdbcType=SMALLINT},
      </if>
      <if test="cancelhours != null">
        #{cancelhours,jdbcType=REAL},
      </if>
      <if test="overhourscanceltype != null">
        #{overhourscanceltype,jdbcType=SMALLINT},
      </if>
      <if test="cancelfee != null">
        #{cancelfee,jdbcType=REAL},
      </if>
      <if test="begincanceltype != null">
        #{begincanceltype,jdbcType=SMALLINT},
      </if>
      <if test="endcanceltype != null">
        #{endcanceltype,jdbcType=SMALLINT},
      </if>
      <if test="begincancelfee != null">
        #{begincancelfee,jdbcType=REAL},
      </if>
      <if test="endcancelfee != null">
        #{endcancelfee,jdbcType=REAL},
      </if>
      <if test="transfertype != null">
        #{transfertype,jdbcType=SMALLINT},
      </if>
      <if test="transferfeetype != null">
        #{transferfeetype,jdbcType=SMALLINT},
      </if>
      <if test="transferfee != null">
        #{transferfee,jdbcType=REAL},
      </if>
      <if test="transfernum != null">
        #{transfernum,jdbcType=SMALLINT},
      </if>
      <if test="transferprice != null">
        #{transferprice,jdbcType=REAL},
      </if>
      <if test="sharetype != null">
        #{sharetype,jdbcType=SMALLINT},
      </if>
      <if test="sharenum != null">
        #{sharenum,jdbcType=SMALLINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="optuserid != null">
        #{optuserid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ist.svc.domain.ProdLimitExample" resultType="java.lang.Long">
    select count(*) from prod_limit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prod_limit
    <set>
      <if test="record.prodlimitid != null">
        prodlimitid = #{record.prodlimitid,jdbcType=INTEGER},
      </if>
      <if test="record.tradetypeid != null">
        tradetypeid = #{record.tradetypeid,jdbcType=SMALLINT},
      </if>
      <if test="record.prodtypeid != null">
        prodtypeid = #{record.prodtypeid,jdbcType=SMALLINT},
      </if>
      <if test="record.shopid != null">
        shopid = #{record.shopid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.descr != null">
        descr = #{record.descr,jdbcType=VARCHAR},
      </if>
      <if test="record.safekeepmin != null">
        safekeepmin = #{record.safekeepmin,jdbcType=SMALLINT},
      </if>
      <if test="record.safekeepmax != null">
        safekeepmax = #{record.safekeepmax,jdbcType=SMALLINT},
      </if>
      <if test="record.safekeep != null">
        safekeep = #{record.safekeep,jdbcType=SMALLINT},
      </if>
      <if test="record.safekeeparrive != null">
        safekeeparrive = #{record.safekeeparrive,jdbcType=SMALLINT},
      </if>
      <if test="record.canceltype != null">
        canceltype = #{record.canceltype,jdbcType=SMALLINT},
      </if>
      <if test="record.cancelhours != null">
        cancelhours = #{record.cancelhours,jdbcType=REAL},
      </if>
      <if test="record.overhourscanceltype != null">
        overhourscanceltype = #{record.overhourscanceltype,jdbcType=SMALLINT},
      </if>
      <if test="record.cancelfee != null">
        cancelfee = #{record.cancelfee,jdbcType=REAL},
      </if>
      <if test="record.begincanceltype != null">
        begincanceltype = #{record.begincanceltype,jdbcType=SMALLINT},
      </if>
      <if test="record.endcanceltype != null">
        endcanceltype = #{record.endcanceltype,jdbcType=SMALLINT},
      </if>
      <if test="record.begincancelfee != null">
        begincancelfee = #{record.begincancelfee,jdbcType=REAL},
      </if>
      <if test="record.endcancelfee != null">
        endcancelfee = #{record.endcancelfee,jdbcType=REAL},
      </if>
      <if test="record.transfertype != null">
        transfertype = #{record.transfertype,jdbcType=SMALLINT},
      </if>
      <if test="record.transferfeetype != null">
        transferfeetype = #{record.transferfeetype,jdbcType=SMALLINT},
      </if>
      <if test="record.transferfee != null">
        transferfee = #{record.transferfee,jdbcType=REAL},
      </if>
      <if test="record.transfernum != null">
        transfernum = #{record.transfernum,jdbcType=SMALLINT},
      </if>
      <if test="record.transferprice != null">
        transferprice = #{record.transferprice,jdbcType=REAL},
      </if>
      <if test="record.sharetype != null">
        sharetype = #{record.sharetype,jdbcType=SMALLINT},
      </if>
      <if test="record.sharenum != null">
        sharenum = #{record.sharenum,jdbcType=SMALLINT},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.optuserid != null">
        optuserid = #{record.optuserid,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prod_limit
    set prodlimitid = #{record.prodlimitid,jdbcType=INTEGER},
      tradetypeid = #{record.tradetypeid,jdbcType=SMALLINT},
      prodtypeid = #{record.prodtypeid,jdbcType=SMALLINT},
      shopid = #{record.shopid,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=SMALLINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      descr = #{record.descr,jdbcType=VARCHAR},
      safekeepmin = #{record.safekeepmin,jdbcType=SMALLINT},
      safekeepmax = #{record.safekeepmax,jdbcType=SMALLINT},
      safekeep = #{record.safekeep,jdbcType=SMALLINT},
      safekeeparrive = #{record.safekeeparrive,jdbcType=SMALLINT},
      canceltype = #{record.canceltype,jdbcType=SMALLINT},
      cancelhours = #{record.cancelhours,jdbcType=REAL},
      overhourscanceltype = #{record.overhourscanceltype,jdbcType=SMALLINT},
      cancelfee = #{record.cancelfee,jdbcType=REAL},
      begincanceltype = #{record.begincanceltype,jdbcType=SMALLINT},
      endcanceltype = #{record.endcanceltype,jdbcType=SMALLINT},
      begincancelfee = #{record.begincancelfee,jdbcType=REAL},
      endcancelfee = #{record.endcancelfee,jdbcType=REAL},
      transfertype = #{record.transfertype,jdbcType=SMALLINT},
      transferfeetype = #{record.transferfeetype,jdbcType=SMALLINT},
      transferfee = #{record.transferfee,jdbcType=REAL},
      transfernum = #{record.transfernum,jdbcType=SMALLINT},
      transferprice = #{record.transferprice,jdbcType=REAL},
      sharetype = #{record.sharetype,jdbcType=SMALLINT},
      sharenum = #{record.sharenum,jdbcType=SMALLINT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      optuserid = #{record.optuserid,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ist.svc.domain.ProdLimit">
    update prod_limit
    <set>
      <if test="tradetypeid != null">
        tradetypeid = #{tradetypeid,jdbcType=SMALLINT},
      </if>
      <if test="prodtypeid != null">
        prodtypeid = #{prodtypeid,jdbcType=SMALLINT},
      </if>
      <if test="shopid != null">
        shopid = #{shopid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=SMALLINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        descr = #{descr,jdbcType=VARCHAR},
      </if>
      <if test="safekeepmin != null">
        safekeepmin = #{safekeepmin,jdbcType=SMALLINT},
      </if>
      <if test="safekeepmax != null">
        safekeepmax = #{safekeepmax,jdbcType=SMALLINT},
      </if>
      <if test="safekeep != null">
        safekeep = #{safekeep,jdbcType=SMALLINT},
      </if>
      <if test="safekeeparrive != null">
        safekeeparrive = #{safekeeparrive,jdbcType=SMALLINT},
      </if>
      <if test="canceltype != null">
        canceltype = #{canceltype,jdbcType=SMALLINT},
      </if>
      <if test="cancelhours != null">
        cancelhours = #{cancelhours,jdbcType=REAL},
      </if>
      <if test="overhourscanceltype != null">
        overhourscanceltype = #{overhourscanceltype,jdbcType=SMALLINT},
      </if>
      <if test="cancelfee != null">
        cancelfee = #{cancelfee,jdbcType=REAL},
      </if>
      <if test="begincanceltype != null">
        begincanceltype = #{begincanceltype,jdbcType=SMALLINT},
      </if>
      <if test="endcanceltype != null">
        endcanceltype = #{endcanceltype,jdbcType=SMALLINT},
      </if>
      <if test="begincancelfee != null">
        begincancelfee = #{begincancelfee,jdbcType=REAL},
      </if>
      <if test="endcancelfee != null">
        endcancelfee = #{endcancelfee,jdbcType=REAL},
      </if>
      <if test="transfertype != null">
        transfertype = #{transfertype,jdbcType=SMALLINT},
      </if>
      <if test="transferfeetype != null">
        transferfeetype = #{transferfeetype,jdbcType=SMALLINT},
      </if>
      <if test="transferfee != null">
        transferfee = #{transferfee,jdbcType=REAL},
      </if>
      <if test="transfernum != null">
        transfernum = #{transfernum,jdbcType=SMALLINT},
      </if>
      <if test="transferprice != null">
        transferprice = #{transferprice,jdbcType=REAL},
      </if>
      <if test="sharetype != null">
        sharetype = #{sharetype,jdbcType=SMALLINT},
      </if>
      <if test="sharenum != null">
        sharenum = #{sharenum,jdbcType=SMALLINT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="optuserid != null">
        optuserid = #{optuserid,jdbcType=BIGINT},
      </if>
    </set>
    where prodlimitid = #{prodlimitid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ist.svc.domain.ProdLimit">
    update prod_limit
    set tradetypeid = #{tradetypeid,jdbcType=SMALLINT},
      prodtypeid = #{prodtypeid,jdbcType=SMALLINT},
      shopid = #{shopid,jdbcType=INTEGER},
      `status` = #{status,jdbcType=SMALLINT},
      `name` = #{name,jdbcType=VARCHAR},
      descr = #{descr,jdbcType=VARCHAR},
      safekeepmin = #{safekeepmin,jdbcType=SMALLINT},
      safekeepmax = #{safekeepmax,jdbcType=SMALLINT},
      safekeep = #{safekeep,jdbcType=SMALLINT},
      safekeeparrive = #{safekeeparrive,jdbcType=SMALLINT},
      canceltype = #{canceltype,jdbcType=SMALLINT},
      cancelhours = #{cancelhours,jdbcType=REAL},
      overhourscanceltype = #{overhourscanceltype,jdbcType=SMALLINT},
      cancelfee = #{cancelfee,jdbcType=REAL},
      begincanceltype = #{begincanceltype,jdbcType=SMALLINT},
      endcanceltype = #{endcanceltype,jdbcType=SMALLINT},
      begincancelfee = #{begincancelfee,jdbcType=REAL},
      endcancelfee = #{endcancelfee,jdbcType=REAL},
      transfertype = #{transfertype,jdbcType=SMALLINT},
      transferfeetype = #{transferfeetype,jdbcType=SMALLINT},
      transferfee = #{transferfee,jdbcType=REAL},
      transfernum = #{transfernum,jdbcType=SMALLINT},
      transferprice = #{transferprice,jdbcType=REAL},
      sharetype = #{sharetype,jdbcType=SMALLINT},
      sharenum = #{sharenum,jdbcType=SMALLINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      optuserid = #{optuserid,jdbcType=BIGINT}
    where prodlimitid = #{prodlimitid,jdbcType=INTEGER}
  </update>
  <select id="selectProdLimits" parameterType="map" resultMap="BaseResultMap">
    <choose>
      <when test="prodTypeId!=null or shopId != null or prodLimitIds!=null">
        select  <include refid="Base_Column_List" /> from prod_limit
        <where>
          <if test="prodLimitIds!=null">
            and prodLimitId in
            <foreach collection="prodLimitIds" item="prodLimitId" open="(" close=")" separator=",">
              #{prodLimitId}
            </foreach>
          </if>
          <if test="prodTypeId!=null">
            and prodTypeId = #{prodTypeId}
          </if>
          <if test="shopId!=null">
            and shopId=#{shopId}
          </if>
        </where>
      </when>
      <otherwise>
        select * from PROD_LIMIT where tradeTypeId=#{tradeTypeId} UNION ALL (select * from PROD_LIMIT WHERE tradeTypeId=SUBSTRING(#{tradeTypeId},1,3) and not  EXISTS (select * from PROD_LIMIT where tradeTypeId=#{tradeTypeId}))
        UNION ALL select * from PROD_LIMIT WHERE tradeTypeId=SUBSTRING(#{tradeTypeId},1,1) and not  EXISTS (select * from PROD_LIMIT where tradeTypeId=SUBSTRING(#{tradeTypeId},1,3))
      </otherwise>
    </choose>
  </select>
</mapper>