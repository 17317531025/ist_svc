<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ist.svc.dao.CartMapper">
  <resultMap id="BaseResultMap" type="com.ist.svc.domain.Cart">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="userid" jdbcType="BIGINT" property="userid" />
    <result column="shopid" jdbcType="INTEGER" property="shopid" />
    <result column="prodinfoid" jdbcType="INTEGER" property="prodinfoid" />
    <result column="prodid" jdbcType="INTEGER" property="prodid" />
    <result column="cartfee" jdbcType="REAL" property="cartfee" />
    <result column="amount" jdbcType="SMALLINT" property="amount" />
    <result column="selected" jdbcType="SMALLINT" property="selected" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <resultMap id="BaseResultMapDetail" type="com.ist.svc.domain.Cart">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="userid" jdbcType="BIGINT" property="userid" />
    <result column="shopid" jdbcType="INTEGER" property="shopid" />
    <result column="prodinfoid" jdbcType="INTEGER" property="prodinfoid" />
    <result column="prodid" jdbcType="INTEGER" property="prodid" />
    <result column="cartfee" jdbcType="REAL" property="cartfee" />
    <result column="amount" jdbcType="SMALLINT" property="amount" />
    <result column="selected" jdbcType="SMALLINT" property="selected" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="spec" jdbcType="VARCHAR" property="spec" />
    <result column="salefee" jdbcType="REAL" property="saleFee" />
    <result column="HeadImg" jdbcType="VARCHAR" property="headImg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userid, shopid, prodinfoid, prodid, cartfee, amount, selected, createtime, updatetime
  </sql>
  <sql id="Base_Column_List_Detail">
    A.id, A.userid, A.shopid, A.prodinfoid, A.prodid, A.cartfee, A.amount, A.selected, A.createtime, A.updatetime,
    B.name,B.spec,B.salefee,C.HeadImg
  </sql>
  <select id="selectsByParams" resultMap="BaseResultMapDetail" parameterType="map">
    select <include refid="Base_Column_List_Detail"></include>
    from cart A left join prod B on A.prodid=B.prodid left join prod_info C on A.prodinfoid=C.prodinfoid
    <where>
      <if test="userId!=null">
        and A.userid = #{userId,jdbcType=BIGINT}
      </if>
      <if test="prodId!=null">
        and A.prodid = #{prodId,jdbcType=INTEGER}
      </if>
      <if test="prodInfoId!=null">
        and A.prodinfoid = #{prodInfoId,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="selectByExample" parameterType="com.ist.svc.domain.CartExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cart
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cart
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ist.svc.domain.CartExample">
    delete from cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ist.svc.domain.Cart">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cart (userid, shopid, prodinfoid, 
      prodid, cartfee, amount, 
      selected, createtime, updatetime
      )
    values (#{userid,jdbcType=BIGINT}, #{shopid,jdbcType=INTEGER}, #{prodinfoid,jdbcType=INTEGER}, 
      #{prodid,jdbcType=INTEGER}, #{cartfee,jdbcType=REAL}, #{amount,jdbcType=SMALLINT}, 
      #{selected,jdbcType=SMALLINT}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ist.svc.domain.Cart">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cart
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="shopid != null">
        shopid,
      </if>
      <if test="prodinfoid != null">
        prodinfoid,
      </if>
      <if test="prodid != null">
        prodid,
      </if>
      <if test="cartfee != null">
        cartfee,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="selected != null">
        selected,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=INTEGER},
      </if>
      <if test="prodinfoid != null">
        #{prodinfoid,jdbcType=INTEGER},
      </if>
      <if test="prodid != null">
        #{prodid,jdbcType=INTEGER},
      </if>
      <if test="cartfee != null">
        #{cartfee,jdbcType=REAL},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=SMALLINT},
      </if>
      <if test="selected != null">
        #{selected,jdbcType=SMALLINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ist.svc.domain.CartExample" resultType="java.lang.Long">
    select count(*) from cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cart
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.shopid != null">
        shopid = #{record.shopid,jdbcType=INTEGER},
      </if>
      <if test="record.prodinfoid != null">
        prodinfoid = #{record.prodinfoid,jdbcType=INTEGER},
      </if>
      <if test="record.prodid != null">
        prodid = #{record.prodid,jdbcType=INTEGER},
      </if>
      <if test="record.cartfee != null">
        cartfee = #{record.cartfee,jdbcType=REAL},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=SMALLINT},
      </if>
      <if test="record.selected != null">
        selected = #{record.selected,jdbcType=SMALLINT},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cart
    set id = #{record.id,jdbcType=BIGINT},
      userid = #{record.userid,jdbcType=BIGINT},
      shopid = #{record.shopid,jdbcType=INTEGER},
      prodinfoid = #{record.prodinfoid,jdbcType=INTEGER},
      prodid = #{record.prodid,jdbcType=INTEGER},
      cartfee = #{record.cartfee,jdbcType=REAL},
      amount = #{record.amount,jdbcType=SMALLINT},
      selected = #{record.selected,jdbcType=SMALLINT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ist.svc.domain.Cart">
    update cart
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="shopid != null">
        shopid = #{shopid,jdbcType=INTEGER},
      </if>
      <if test="prodinfoid != null">
        prodinfoid = #{prodinfoid,jdbcType=INTEGER},
      </if>
      <if test="prodid != null">
        prodid = #{prodid,jdbcType=INTEGER},
      </if>
      <if test="cartfee != null">
        cartfee = #{cartfee,jdbcType=REAL},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=SMALLINT},
      </if>
      <if test="selected != null">
        selected = #{selected,jdbcType=SMALLINT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ist.svc.domain.Cart">
    update cart
    set userid = #{userid,jdbcType=BIGINT},
      shopid = #{shopid,jdbcType=INTEGER},
      prodinfoid = #{prodinfoid,jdbcType=INTEGER},
      prodid = #{prodid,jdbcType=INTEGER},
      cartfee = #{cartfee,jdbcType=REAL},
      amount = #{amount,jdbcType=SMALLINT},
      selected = #{selected,jdbcType=SMALLINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>