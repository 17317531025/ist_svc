<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ist.svc.dao.ShopCouponMapper">
  <resultMap id="BaseResultMap" type="com.ist.svc.domain.ShopCoupon">
    <id column="couponid" jdbcType="INTEGER" property="couponid" />
    <result column="shopid" jdbcType="INTEGER" property="shopid" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="allprod" jdbcType="SMALLINT" property="allprod" />
    <result column="type" jdbcType="SMALLINT" property="type" />
    <result column="conditionmoney" jdbcType="REAL" property="conditionmoney" />
    <result column="money" jdbcType="REAL" property="money" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="take" jdbcType="INTEGER" property="take" />
    <result column="onlinetime" jdbcType="TIMESTAMP" property="onlinetime" />
    <result column="offtime" jdbcType="TIMESTAMP" property="offtime" />
    <result column="starttime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="endtime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="shopname" jdbcType="VARCHAR" property="shopname" />
    <result column="couponname" jdbcType="VARCHAR" property="couponname" />
    <result column="descr" jdbcType="VARCHAR" property="descr" />
    <result column="userid" jdbcType="BIGINT" property="userid" />
  </resultMap>
  <resultMap id="BaseResultMapDetail" type="com.ist.svc.domain.ShopCoupon">
    <id column="couponid" jdbcType="INTEGER" property="couponid" />
    <result column="shopid" jdbcType="INTEGER" property="shopid" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="allprod" jdbcType="SMALLINT" property="allprod" />
    <result column="type" jdbcType="SMALLINT" property="type" />
    <result column="conditionmoney" jdbcType="REAL" property="conditionmoney" />
    <result column="money" jdbcType="REAL" property="money" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="take" jdbcType="INTEGER" property="take" />
    <result column="onlinetime" jdbcType="TIMESTAMP" property="onlinetime" />
    <result column="offtime" jdbcType="TIMESTAMP" property="offtime" />
    <result column="starttime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="endtime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="shopname" jdbcType="VARCHAR" property="shopname" />
    <result column="couponname" jdbcType="VARCHAR" property="couponname" />
    <result column="descr" jdbcType="VARCHAR" property="descr" />
    <result column="userid" jdbcType="BIGINT" property="userid" />
    <collection property="shopCouponProds" ofType="com.ist.svc.domain.ShopCouponProd" javaType="java.util.List">
      <id column="id" jdbcType="BIGINT" property="id" />
<!--      <id column="couponid" jdbcType="INTEGER" property="couponid" />-->
      <result column="prodinfoId" jdbcType="INTEGER" property="prodinfoid" />
      <result column="prodid" jdbcType="INTEGER" property="prodid" />
      <result column="headimg" jdbcType="VARCHAR" property="headimg" />
      <result column="prodname" jdbcType="VARCHAR" property="prodname" />
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    couponid, shopid, `status`, allprod, `type`, conditionmoney, money, amount, take, 
    onlinetime, offtime, starttime, endtime, createtime, updatetime, shopname, couponname, 
    descr, userid
  </sql>
  <select id="selectByExample" parameterType="com.ist.svc.domain.ShopCouponExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop_coupon
    where couponid = #{couponid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shop_coupon
    where couponid = #{couponid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ist.svc.domain.ShopCouponExample">
    delete from shop_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ist.svc.domain.ShopCoupon">
    <selectKey keyProperty="couponid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into shop_coupon (shopid, `status`, allprod, 
      `type`, conditionmoney, money, 
      amount, take, onlinetime, 
      offtime, starttime, endtime, 
      createtime, updatetime, shopname, 
      couponname, descr, userid
      )
    values (#{shopid,jdbcType=INTEGER}, #{status,jdbcType=SMALLINT}, #{allprod,jdbcType=SMALLINT}, 
      #{type,jdbcType=SMALLINT}, #{conditionmoney,jdbcType=REAL}, #{money,jdbcType=REAL}, 
      #{amount,jdbcType=INTEGER}, #{take,jdbcType=INTEGER}, #{onlinetime,jdbcType=TIMESTAMP}, 
      #{offtime,jdbcType=TIMESTAMP}, #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{shopname,jdbcType=VARCHAR}, 
      #{couponname,jdbcType=VARCHAR}, #{descr,jdbcType=VARCHAR}, #{userid,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ist.svc.domain.ShopCoupon">
    <selectKey keyProperty="couponid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into shop_coupon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shopid != null">
        shopid,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="allprod != null">
        allprod,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="conditionmoney != null">
        conditionmoney,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="take != null">
        take,
      </if>
      <if test="onlinetime != null">
        onlinetime,
      </if>
      <if test="offtime != null">
        offtime,
      </if>
      <if test="starttime != null">
        starttime,
      </if>
      <if test="endtime != null">
        endtime,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="shopname != null">
        shopname,
      </if>
      <if test="couponname != null">
        couponname,
      </if>
      <if test="descr != null">
        descr,
      </if>
      <if test="userid != null">
        userid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shopid != null">
        #{shopid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="allprod != null">
        #{allprod,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="conditionmoney != null">
        #{conditionmoney,jdbcType=REAL},
      </if>
      <if test="money != null">
        #{money,jdbcType=REAL},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="take != null">
        #{take,jdbcType=INTEGER},
      </if>
      <if test="onlinetime != null">
        #{onlinetime,jdbcType=TIMESTAMP},
      </if>
      <if test="offtime != null">
        #{offtime,jdbcType=TIMESTAMP},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="shopname != null">
        #{shopname,jdbcType=VARCHAR},
      </if>
      <if test="couponname != null">
        #{couponname,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        #{descr,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ist.svc.domain.ShopCouponExample" resultType="java.lang.Long">
    select count(*) from shop_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shop_coupon
    <set>
      <if test="record.couponid != null">
        couponid = #{record.couponid,jdbcType=INTEGER},
      </if>
      <if test="record.shopid != null">
        shopid = #{record.shopid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.allprod != null">
        allprod = #{record.allprod,jdbcType=SMALLINT},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=SMALLINT},
      </if>
      <if test="record.conditionmoney != null">
        conditionmoney = #{record.conditionmoney,jdbcType=REAL},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=REAL},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.take != null">
        take = #{record.take,jdbcType=INTEGER},
      </if>
      <if test="record.onlinetime != null">
        onlinetime = #{record.onlinetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.offtime != null">
        offtime = #{record.offtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.starttime != null">
        starttime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        endtime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shopname != null">
        shopname = #{record.shopname,jdbcType=VARCHAR},
      </if>
      <if test="record.couponname != null">
        couponname = #{record.couponname,jdbcType=VARCHAR},
      </if>
      <if test="record.descr != null">
        descr = #{record.descr,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shop_coupon
    set couponid = #{record.couponid,jdbcType=INTEGER},
      shopid = #{record.shopid,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=SMALLINT},
      allprod = #{record.allprod,jdbcType=SMALLINT},
      `type` = #{record.type,jdbcType=SMALLINT},
      conditionmoney = #{record.conditionmoney,jdbcType=REAL},
      money = #{record.money,jdbcType=REAL},
      amount = #{record.amount,jdbcType=INTEGER},
      take = #{record.take,jdbcType=INTEGER},
      onlinetime = #{record.onlinetime,jdbcType=TIMESTAMP},
      offtime = #{record.offtime,jdbcType=TIMESTAMP},
      starttime = #{record.starttime,jdbcType=TIMESTAMP},
      endtime = #{record.endtime,jdbcType=TIMESTAMP},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      shopname = #{record.shopname,jdbcType=VARCHAR},
      couponname = #{record.couponname,jdbcType=VARCHAR},
      descr = #{record.descr,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ist.svc.domain.ShopCoupon">
    update shop_coupon
    <set>
      <if test="shopid != null">
        shopid = #{shopid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=SMALLINT},
      </if>
      <if test="allprod != null">
        allprod = #{allprod,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=SMALLINT},
      </if>
      <if test="conditionmoney != null">
        conditionmoney = #{conditionmoney,jdbcType=REAL},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=REAL},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="take != null">
        take = #{take,jdbcType=INTEGER},
      </if>
      <if test="onlinetime != null">
        onlinetime = #{onlinetime,jdbcType=TIMESTAMP},
      </if>
      <if test="offtime != null">
        offtime = #{offtime,jdbcType=TIMESTAMP},
      </if>
      <if test="starttime != null">
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="shopname != null">
        shopname = #{shopname,jdbcType=VARCHAR},
      </if>
      <if test="couponname != null">
        couponname = #{couponname,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        descr = #{descr,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=BIGINT},
      </if>
    </set>
    where couponid = #{couponid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ist.svc.domain.ShopCoupon">
    update shop_coupon
    set shopid = #{shopid,jdbcType=INTEGER},
      `status` = #{status,jdbcType=SMALLINT},
      allprod = #{allprod,jdbcType=SMALLINT},
      `type` = #{type,jdbcType=SMALLINT},
      conditionmoney = #{conditionmoney,jdbcType=REAL},
      money = #{money,jdbcType=REAL},
      amount = #{amount,jdbcType=INTEGER},
      take = #{take,jdbcType=INTEGER},
      onlinetime = #{onlinetime,jdbcType=TIMESTAMP},
      offtime = #{offtime,jdbcType=TIMESTAMP},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      shopname = #{shopname,jdbcType=VARCHAR},
      couponname = #{couponname,jdbcType=VARCHAR},
      descr = #{descr,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=BIGINT}
    where couponid = #{couponid,jdbcType=INTEGER}
  </update>
  <select id="selectByParams" parameterType="map" resultMap="BaseResultMapDetail">
    select A.*,B.* from shop_coupon A left join shop_coupon_prod B on A.couponid=B.couponid
    <where>
      <if test="status!=null">
         A.status = #{status,jdbcType=SMALLINT}
      </if>
      <if test="prodInfoId!=null">
        B.prodinfoId = #{prodInfoId,jdbcType=SMALLINT}
      </if>
      <if test="shopIds != null and shopIds!=''">
        and A.shopid in
        <foreach collection="shopIds" item="shopId"  open="(" separator="," close=")">
          #{shopId}
        </foreach>
      </if>
      <if test="offTime!=null">
        <![CDATA[ and A.offtime >= #{offTime,jdbcType=TIMESTAMP}  ]]>
      </if>
    </where>
    order by A.couponid desc
  </select>
</mapper>